---
# Create necessary directories first
- name: Create directory for RKE2 config
  ansible.builtin.file:
    path: "/etc/rancher/rke2"
    state: directory
    mode: '0755'

- name: Create directory for RKE2 token
  ansible.builtin.file:
    path: "/var/lib/rancher/rke2/server"
    state: directory
    mode: '0755'

# Deploy configurations and service files
- name: Deploy RKE2 server Configuration
  ansible.builtin.template:
    src: templates/rke2-server-config.j2
    dest: /etc/rancher/rke2/config.yaml
    owner: root
    group: root
    mode: '0644'
  when: inventory_hostname in groups['server_nodes']

- name: Create systemd service file for RKE2 server
  ansible.builtin.template:
    src: templates/rke2-server.service.j2
    dest: /etc/systemd/system/rke2-server.service
    owner: root
    group: root
    mode: '0644'
  when: inventory_hostname in groups['server_nodes']

- name: Create systemd service file for RKE2 agent
  ansible.builtin.template:
    src: templates/rke2-agent.service.j2
    dest: /etc/systemd/system/rke2-agent.service
    owner: root
    group: root
    mode: '0644'
  when: inventory_hostname in groups['agent_nodes']

# Start and enable RKE2 server on the first node
- name: Ensure RKE2 server is enabled and running
  ansible.builtin.systemd:
    name: rke2-server
    enabled: true
    state: started
    daemon_reload: true
  when: inventory_hostname == groups['server_nodes'][0]

- name: Wait for node-token
  ansible.builtin.wait_for:
    path: /var/lib/rancher/rke2/server/node-token
  when: inventory_hostname == groups['server_nodes'][0]

- name: Fetch the token from the first server node
  ansible.builtin.slurp:
    src: /var/lib/rancher/rke2/server/node-token
  register: rke2_token
  when: inventory_hostname == groups['server_nodes'][0]

- name: Debug - List contents of /var/lib/rancher/rke2/server/cred
  ansible.builtin.command: ls -la /var/lib/rancher/rke2/server/cred
  register: cred_contents
  when: inventory_hostname == groups['server_nodes'][0]

- name: Debug - Display cred contents
  ansible.builtin.debug:
    var: cred_contents.stdout_lines
  when: inventory_hostname == groups['server_nodes'][0]

- name: Find token file in cred directory
  ansible.builtin.find:
    paths: /var/lib/rancher/rke2/server/cred
    patterns: "*token*"
  register: token_file
  when: inventory_hostname == groups['server_nodes'][0]

- name: Debug - Display found token files
  ansible.builtin.debug:
    var: token_file.files
  when: inventory_hostname == groups['server_nodes'][0]

- name: Wait for RKE2 token file to be ready
  ansible.builtin.wait_for:
    path: "{{ token_file.files[0].path }}"
    state: present
    timeout: 300
  when: 
    - inventory_hostname == groups['server_nodes'][0]
    - token_file.files | length > 0

- name: Fetch the token from the cred file
  ansible.builtin.slurp:
    src: "{{ token_file.files[0].path }}"
  register: rke2_token_file
  when: 
    - inventory_hostname == groups['server_nodes'][0]
    - token_file.files | length > 0

- name: Set token fact for first server
  ansible.builtin.set_fact:
    rke2_token: "{{ rke2_token_file['content'] | b64decode | trim }}"
  when: 
    - inventory_hostname == groups['server_nodes'][0]
    - token_file.files | length > 0

- name: Debug - Display token
  ansible.builtin.debug:
    var: rke2_token
  when: 
    - inventory_hostname == groups['server_nodes'][0]
    - rke2_token is defined
# ... (subsequent tasks remain the same)

# Wait for necessary files and resources
#- name: Wait for node-token
#  ansible.builtin.wait_for:
#    path: /var/lib/rancher/rke2/server/node-token
#  when: inventory_hostname == groups['server_nodes'][0]

- name: Wait for kubectl
  ansible.builtin.wait_for:
    path: /var/lib/rancher/rke2/bin/kubectl
  when: inventory_hostname == groups['server_nodes'][0]

# Set up kubectl
- name: Copy kubectl to user bin
  ansible.builtin.copy:
    src: /var/lib/rancher/rke2/bin/kubectl
    dest: /usr/local/bin/kubectl
    mode: '0755'
    remote_src: true
  become: true
  when: inventory_hostname == groups['server_nodes'][0]

- name: Wait for kubectl in user bin
  ansible.builtin.wait_for:
    path: /usr/local/bin/kubectl
  when: inventory_hostname == groups['server_nodes'][0]

# Set up kubeconfig
- name: Ensure .kube directory exists in user's home
  ansible.builtin.file:
    path: "/home/{{ ansible_user }}/.kube"
    state: directory
    mode: '0755'
  become: true

- name: Copy config file to user home directory
  ansible.builtin.copy:
    src: /etc/rancher/rke2/rke2.yaml
    dest: "/home/{{ ansible_user }}/.kube/config"
    remote_src: true
    owner: "{{ ansible_user }}"
    mode: "u=rw,g=,o="
  when: inventory_hostname == groups['server_nodes'][0]

- name: Replace IP address with server1
  ansible.builtin.replace:
    path: /home/{{ ansible_user }}/.kube/config
    regexp: '127.0.0.1'
    replace: "{{ hostvars[groups['server_nodes'][0]]['ansible_host'] }}"
  when: inventory_hostname == groups['server_nodes'][0]